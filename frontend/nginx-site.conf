# Server configuration for LottoDrop Frontend
server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security: Connection and request limits
    limit_conn perip 10;
    limit_conn perserver 100;

    # Charset
    charset utf-8;

    # Security: Disable access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Disable access to backup files
    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # robots.txt - Critical for SEO and crawler compliance (MUST come before SPA route)
    location = /robots.txt {
        add_header Content-Type "text/plain";
        add_header Cache-Control "public, max-age=86400"; # Cache for 24 hours
        access_log off; # Don't log robot requests to reduce noise
        try_files $uri =404;
    }

    # sitemap.xml - SEO optimization (MUST come before SPA route)
    location = /sitemap.xml {
        add_header Content-Type "application/xml";
        add_header Cache-Control "public, max-age=86400";
        access_log off;
        try_files $uri =404;
    }

    # Additional SEO and verification files (MUST come before SPA route)
    location ~* ^/(favicon\.ico|apple-touch-icon.*\.png|android-chrome.*\.png|mstile.*\.png|browserconfig\.xml)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Security and verification files (Google, Bing, etc.) - MUST come before SPA route
    location ~* "^/[a-z0-9]{16,}\.txt$" {
        add_header Content-Type "text/plain";
        add_header Cache-Control "public, max-age=86400";
        access_log off;
        try_files $uri =404;
    }

    # Main SPA route (MUST come after specific file routes)
    location / {
        try_files $uri $uri/ /index.html;

        # Security headers for HTML
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Cache control for HTML (no cache)
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Static assets caching (images and fonts only - not JS/CSS)
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # CORS for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
        
        # Gzip static assets
        gzip_static on;
    }

    # JavaScript and CSS files (short cache for updates)
    location ~* \.(js|css)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;
        gzip_static on;
    }

    # Service worker (no cache)
    location /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }


    # Manifest file
    location /manifest.json {
        add_header Content-Type "application/manifest+json";
        add_header Cache-Control "public, max-age=604800";
    }

    # API proxy (if needed)
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header Origin http://localhost;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # WebSocket proxy (if needed)
    location /socket.io/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin http://localhost;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 300s; # Longer timeout for WebSocket
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security: Block access to source maps in production
    location ~ \.map$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: Block access to sensitive files
    location ~* (?:package\.json|\.env|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }

    # Security: Additional protections
    location ~* \.(php|asp|aspx|jsp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to version control
    location ~ /\.git {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common exploits
    location ~* /(wp-admin|wp-login|admin|administrator|phpmyadmin) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Log real IP addresses
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
}